
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define CONTROL 3
#define CLEAN   4

&mt {
   tapping-term-ms = <400>;
};

/ {
	behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
				&kp Q         &kp W       &kp F         &kp P        &kp B            &kp J   &kp L        &kp U        &kp Y       &kp SEMI
				&hm LGUI A    &hm LALT R  &hm LCTRL S   &hm LSHIFT T &kp G            &kp M   &hm RSHFT N  &hm RCTRL E  &hm RALT I  &hm RGUI O
				&mt LSHIFT Z  &kp X       &kp C         &kp D        &kp V            &kp K   &kp H        &kp COMMA    &kp DOT     &mt RSHIFT SLASH
                              &kp LEFT       &kp RIGHT                                                     &kp UP       &kp DOWN
                                              &mt LGUI BSPC &mt LCTL ESC           &kp PG_UP &tog CLEAN
                                              &mt LCTL ENTER &mt RGUI SPACE       &kp PG_DN &mt RCTL ENTER
			>;

		};

		lower {
			bindings = <
				&kp TAB    &kp W &kp E &kp R &kp T  &kp TILDE   &kp GRAVE  &kp LPAR    &kp RPAR   &kp MINUS
				&kp A    &kp S &kp D &kp PLUS &kp G  &kp H   &kp J  &kp LBRC    &kp RBRC   &kp DQT
				&kp EQUAL    &kp X &kp C &kp V &kp B  &kp N   &kp PIPE  &kp LBKT &kp RBKT &kp BSLH
                &kp LEFT &kp RIGHT                   &kp UP &kp DOWN
                      &mt LGUI BSPC &mt LCTL ESC         &kp PG_UP &mt RGUI SPACE
                        &mt LCTL ENTER &mt RGUI SPACE         &kp PG_DN &mt RCTL ENTER
			>;

		};

        raise {
			bindings = <
						&kp N1    &kp N2 &kp N3 &kp N4 &kp N5  &kp N6   &kp N7  &kp N8    &kp N9   &kp N0
				&kp EXCL    &kp AT &kp HASH &kp DLLR &kp PRCNT  &kp CARET   &kp AMPS  &kp STAR    &kp LPAR   &kp RPAR
				&mt LSHIFT Z    &kp X &kp C &kp V &kp B  &kp N   &kp M  &kp COMMA &kp DOT &mt RSHIFT BSLH
                &kp LEFT &kp RIGHT                   &kp UP &kp DOWN
                      &mt LGUI BSPC &mt LCTL ESC         &kp PG_UP &mt RGUI SPACE
                        &mt LCTL ENTER &mt RGUI SPACE         &kp PG_DN &mt RCTL ENTER
		>;

		};

		control {
			bindings = <
				&kp Q    &kp W &kp LS(LG(U)) &kp LS(LG(I)) &kp T  &kp Y   &kp U  &kp I    &kp O   &kp UNDER
				&kp A    &kp LS(LG(LEFT)) &kp LS(LG(J)) &kp LS(LG(K)) &kp LS(LG(RIGHT))  &kp H   &kp J  &kp K    &kp L   &kp SQT
				&mt LSHIFT Z    &kp X &kp C &kp V &kp B  &kp N   &kp M  &kp COMMA &kp DOT &mt RSHIFT BSLH
                &kp LEFT &kp RIGHT                   &kp UP &kp DOWN
                      &mt LGUI BSPC &mt LCTL ESC         &kp PG_UP &bt BT_CLR
                        &mt LCTL ENTER &mt RGUI SPACE         &kp PG_DN &mt RCTL ENTER
                        &kp X &kp Y
	            >;

		};

        clean {
			bindings = <
				&kp Q         &kp W          &kp E     &kp R         &kp T            &kp Y   &kp U        &kp I     &kp O          &kp P
				&kp A         &kp S          &kp D     &kp F         &kp G            &kp H   &kp J        &kp K     &kp L          &kp SEMI
				&mt LSHIFT Z  &kp X          &kp C     &kp V         &kp B            &kp N   &kp M        &kp COMMA &kp DOT        &mt RSHIFT SLASH
                              &kp LEFT       &kp RIGHT                                                     &kp UP    &kp DOWN
                                              &mt LGUI BSPC &mt LCTL ESC           &kp PG_UP &tog CLEAN
                                              &mt LCTL ENTER &mt RGUI SPACE       &kp PG_DN &mt RCTL ENTER
	            >;

		};
	};
};

#define MIRYOKU_ALTERNATIVES_BASE_COLEMAKDH_FLIP \
&kp Q,             &kp W,             &kp F,             &kp P,             &kp B,             &kp J,             &kp L,             &kp U,             &kp Y,             &kp SQT,           \
&hm LGUI A,        &hm LALT R,        &hm LCTRL S,       &hm LSHFT T,       &kp G,             &kp M,             &hm LSHFT N,       &hm LCTRL E,       &hm LALT I,        &hm LGUI O,        \
&lt BUTTON Z,      &hm RALT X,        &kp C,             &kp D,             &kp V,             &kp K,             &kp H,             &kp COMMA,         &hm RALT DOT,      &lt BUTTON SLASH,  \
U_NP,              U_NP,              &lt FUN DEL,       &lt NUM BSPC,      &lt SYM RET,       &lt MOUSE TAB,     &lt NAV SPC,       &lt MEDIA ESC,     U_NP,              U_NP

#define MIRYOKU_ALTERNATIVES_NAV_INVERTEDT_FLIP \
&kp PG_UP,         &kp HOME,          &kp UP,            &kp END,           &kp INS,           U_NA,              U_NA,              U_NA,              U_NA,              &bootloader,       \
&kp PG_DN,         &kp LEFT,          &kp DOWN,          &kp RIGHT,         &kp CAPS,          U_NA,              &kp LSHFT,         &kp LCTRL,         &kp LALT,          &kp LGUI,          \
U_UND,             U_CUT,             U_CPY,             U_PST,             U_RDO,             U_NA,              U_NA,              U_NA,              &kp RALT,          U_NA,              \
U_NP,              U_NP,              &kp DEL,           &kp BSPC,          &kp RET,           U_NA,              U_NA,              U_NA,              U_NP,              U_NP




#define MIRYOKU_ALTERNATIVES_MOUSE_INVERTEDT_FLIP \
U_WH_U,            U_WH_L,            U_MS_U,            U_WH_R,            U_NU,              U_NA,              U_NA,              U_NA,              U_NA,              &bootloader,       \
U_WH_D,            U_MS_L,            U_MS_D,            U_MS_R,            U_NU,              U_NA,              &kp LSHFT,         &kp LCTRL,         &kp LALT,          &kp LGUI,          \
U_UND,             U_CUT,             U_CPY,             U_PST,             U_RDO,             U_NA,              U_NA,              U_NA,              &kp RALT,          U_NA,              \
U_NP,              U_NP,              U_BTN2,            U_BTN3,            U_BTN1,            U_NA,              U_NA,              U_NA,              U_NP,              U_NP




#define MIRYOKU_ALTERNATIVES_MEDIA_INVERTEDT_FLIP \
&rgb_ug RGB_SAI,   &rgb_ug RGB_HUI,   &kp C_VOL_UP,      &rgb_ug RGB_EFF,   &rgb_ug RGB_TOG,   U_NA,              U_NA,              U_NA,              U_NA,              &bootloader,       \
&rgb_ug RGB_BRI,   &kp C_PREV,        &kp C_VOL_DN,      &kp C_NEXT,        &out OUT_TOG,      U_NA,              &kp LSHFT,         &kp LCTRL,         &kp LALT,          &kp LGUI,          \
&bt BT_SEL 0,      &bt BT_SEL 1,      &bt BT_SEL 2,      &bt BT_SEL 3,      &bt BT_CLR,        U_NA,              U_NA,              U_NA,              &kp RALT,          U_NA,              \
U_NP,              U_NP,              &kp C_MUTE,        &kp C_PP,          &kp C_STOP,        U_NA,              U_NA,              U_NA,              U_NP,              U_NP


#define MIRYOKU_ALTERNATIVES_NUM_FLIP \
&bootloader,       U_NA,              U_NA,              U_NA,              U_NA,              &kp LBKT,          &kp NUM_7,         &kp NUM_8,         &kp NUM_9,         &kp RBKT,          \
&kp LGUI,          &kp LALT,          &kp LCTRL,         &kp LSHFT,         U_NA,              &kp EQL,           &kp NUM_4,         &kp NUM_5,         &kp NUM_6,         &kp SEMI,          \
U_NA,              &kp RALT,          U_NA,              U_NA,              U_NA,              &kp BSLH,          &kp NUM_1,         &kp NUM_2,         &kp NUM_3,         &kp GRAVE,         \
U_NP,              U_NP,              U_NA,              U_NA,              U_NA,              &kp MINUS,         &kp NUM_0,         &kp DOT,           U_NP,              U_NP

#define MIRYOKU_ALTERNATIVES_SYM_FLIP \
&bootloader,       U_NA,              U_NA,              U_NA,              U_NA,              &kp LBRC,          &kp AMPS,          &kp ASTRK,         &kp LPAR,          &kp RBRC,          \
&kp LGUI,          &kp LALT,          &kp LCTRL,         &kp LSHFT,         U_NA,              &kp PLUS,          &kp DLLR,          &kp PRCT,          &kp CRRT,          &kp COLON,         \
U_NA,              &kp RALT,          U_NA,              U_NA,              U_NA,              &kp PIPE,          &kp EXCL,          &kp AT,            &kp HASH,          &kp TILDE,         \
U_NP,              U_NP,              U_NA,              U_NA,              U_NA,              &kp UNDER,         &kp LPAR,          &kp RPAR,          U_NP,              U_NP

#define MIRYOKU_ALTERNATIVES_FUN_FLIP \
&bootloader,       U_NA,              U_NA,              U_NA,              U_NA,              &kp PSCRN,         &kp F7,            &kp F8,            &kp F9,            &kp F12,           \
&kp LGUI,          &kp LALT,          &kp LCTRL,         &kp LSHFT,         U_NA,              &kp SLCK,          &kp F4,            &kp F5,            &kp F6,            &kp F11,           \
U_NA,              &kp RALT,          U_NA,              U_NA,              U_NA,              &kp PAUSE_BREAK,   &kp F1,            &kp F2,            &kp F3,            &kp F10,           \
U_NP,              U_NP,              U_NA,              U_NA,              U_NA,              &kp TAB,           &kp SPC,           &kp K_APP,         U_NP,              U_NP


#define MIRYOKU_ALTERNATIVES_BUTTON \
U_UND,             U_CUT,             U_CPY,             U_PST,             U_RDO,             U_RDO,             U_PST,             U_CPY,             U_CUT,             U_UND,             \
&kp LGUI,          &kp LALT,          &kp LCTRL,         &kp LSHFT,         &none,             &none,             &kp LSHFT,         &kp LCTRL,         &kp LALT,          &kp LGUI,          \
U_UND,             U_CUT,             U_CPY,             U_PST,             U_RDO,             U_RDO,             U_PST,             U_CPY,             U_CUT,             U_UND,             \
U_NP,              U_NP,              U_BTN2,            U_BTN3,            U_BTN1,            U_BTN1,            U_BTN3,            U_BTN2,            U_NP,              U_NP
